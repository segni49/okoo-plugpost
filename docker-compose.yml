version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: plugpost-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: plugpost
      POSTGRES_USER: plugpost
      POSTGRES_PASSWORD: plugpost_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - plugpost-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: plugpost-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - plugpost-network

  # PlugPost Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: plugpost-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://plugpost:plugpost_password@postgres:5432/plugpost
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - plugpost-network
    volumes:
      - ./uploads:/app/uploads

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: plugpost-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - plugpost-network

volumes:
  postgres_data:
  redis_data:

networks:
  plugpost-network:
    driver: bridge
